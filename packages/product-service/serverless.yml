service:
  name: product-service
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
frameworkVersion: "2"

# Add the serverless-webpack plugin
plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-offline

custom:
  dotenv:
    basePath: ../../
    required:
      file: true
  webpack:
    packager: "yarn"

provider:
  name: aws
  runtime: nodejs12.x
  #  stage: dev
  region: us-east-2
  apiGateWay:
    shouldStartNameWithService: true

functions:
  getProductsList:
    handler: src/handlers/getProductsList.handler
    events:
      - http:
          method: get
          path: products
          cors: true

  createProduct:
    handler: src/handlers/createProduct.handler
    events:
      - http:
          method: post
          path: products
          cors: true
          request:
            schema:
              application/json: ${file(swagger.yml):components.schemas.ProductSchema}

  getProductsById:
    handler: src/handlers/getProductsById.handler
    events:
      - http:
          method: get
          path: products/{productId}
          cors: true
          request:
            parameters:
              paths:
                productId: true

resources:
  Resources:
    # API Gateway validation does not include CORS headers (https://github.com/serverless/serverless/issues/3896)
    GatewayResponseDefault400:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        RestApiId:
          Ref: "ApiGatewayRestApi"
        ResponseType: DEFAULT_4XX
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseTemplates:
          application/json: "{ \"data\": $context.error.messageString }"
    GatewayResponseDefault500:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        RestApiId:
          Ref: "ApiGatewayRestApi"
        ResponseType: DEFAULT_5XX
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseTemplates:
          application/json: "{ \"data\": $context.error.messageString }"
